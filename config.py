import os
from dotenv import load_dotenv

# ш╝ЙхЕечТ░хвГшоКцХ╕
load_dotenv()

# API шинхоЪ
GROQ_API_KEY = os.getenv("GROQ_API_KEY")
JINA_API_KEY = os.getenv("JINA_API_KEY")

# PDF ф╛Жц║Рч╢▓хЭА
PDF_SOURCES = {
    "шМ╢ценчаФчй╢х╜Щха▒": [
        "https://www.tbrs.gov.tw/files/tbrs/web_structure/4399/A01_1.pdf",  # чмм1цЬЯ
        "https://www.tbrs.gov.tw/files/tbrs/web_structure/4410/A01_1.pdf",  # чмм2цЬЯ
        "https://www.tbrs.gov.tw/files/tbrs/web_structure/4427/A01_1.pdf",  # чмм3цЬЯ
    ],
    "шМ╢ценх░ИшиКшИЗхЕ╢ф╗ЦцЦЗф╗╢": [
        # щАЩшгбхПпф╗ехКахЕецЫ┤хдЪх╛Юч╢▓щаБф╕КцЙ╛хИ░чЪДPDFщАгч╡Р
    ]
}

# ч╢▓щаБф╛Жц║Р - чФицЦ╝шЗкхЛХчЩ╝чП╛PDFщАгч╡Р
WEB_SOURCES = [
    "https://www.tbrs.gov.tw/ws.php?id=4189",  # хП░чБгшМ╢ценчаФчй╢х╜Щха▒цСШшжБ
    "https://www.tbrs.gov.tw/ws.php?id=1569",  # хЕ╢ф╗ЦшМ╢ценчЫ╕щЧЬщаБщЭв
]

# цибхЮЛшинхоЪ
EMBEDDING_PROVIDER = os.getenv("EMBEDDING_PROVIDER", "jina").lower() # 'jina' or 'local'
EMBEDDING_MODEL = "jinaai/jina-embeddings-v3-base-en"
LLM_MODEL = "llama-3.3-70b-versatile"  # Groq цибхЮЛ

# цкФцбИш╖пх╛СшинхоЪ
DATA_DIR = "data"
PDF_DIR = os.path.join(DATA_DIR, "pdfs")
INDEX_DIR = os.path.join(DATA_DIR, "index")

# х╗║члЛчЫощМД
os.makedirs(PDF_DIR, exist_ok=True)
os.makedirs(INDEX_DIR, exist_ok=True)

# Google GeminiшинхоЪ
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
ENABLE_OCR = os.getenv("ENABLE_OCR", "true").lower() == "true"

# цкФцбИф╕КхВ│шинхоЪ
MAX_FILE_SIZE_MB = int(os.getenv("MAX_FILE_SIZE_MB", 10))
MAX_IMAGE_SIZE_MB = int(os.getenv("MAX_IMAGE_SIZE_MB", 5))
SUPPORTED_FILE_TYPES = os.getenv("SUPPORTED_FILE_TYPES", "pdf,txt,docx,md,png,jpg,jpeg,webp,bmp").split(',')
MAX_UPLOAD_FILES = int(os.getenv("MAX_UPLOAD_FILES", 50))

# Graph RAG шинхоЪ
ENABLE_GRAPH_RAG = os.getenv("ENABLE_GRAPH_RAG", "true").lower() == "true"
MAX_TRIPLETS_PER_CHUNK = int(os.getenv("MAX_TRIPLETS_PER_CHUNK", 10))
GRAPH_COMMUNITY_SIZE = int(os.getenv("GRAPH_COMMUNITY_SIZE", 5))

# х░Ншй▒шиШцЖ╢шинхоЪ
CONVERSATION_MEMORY_STEPS = int(os.getenv("CONVERSATION_MEMORY_STEPS", 5))
MAX_CONTEXT_LENGTH = int(os.getenv("MAX_CONTEXT_LENGTH", 4000))
ENABLE_CONVERSATION_MEMORY = os.getenv("ENABLE_CONVERSATION_MEMORY", "true").lower() == "true"

# цкФцбИш╖пх╛СшинхоЪ
USER_UPLOADS_DIR = os.path.join(DATA_DIR, "user_uploads")

# х╗║члЛчЫощМД
os.makedirs(USER_UPLOADS_DIR, exist_ok=True)

# Streamlit шинхоЪ
PAGE_TITLE = "хП░чБгшМ╢шСЙчЯешнШхХПчнФч│╗ч╡▒"
PAGE_ICON = "ЁЯН╡"

# Elasticsearch шинхоЪ
ELASTICSEARCH_HOST = os.getenv("ELASTICSEARCH_HOST", "localhost")
ELASTICSEARCH_PORT = int(os.getenv("ELASTICSEARCH_PORT", 9200))
ELASTICSEARCH_INDEX_NAME = os.getenv("ELASTICSEARCH_INDEX_NAME", "rag_intelligent_assistant")
ELASTICSEARCH_USERNAME = os.getenv("ELASTICSEARCH_USERNAME")
ELASTICSEARCH_PASSWORD = os.getenv("ELASTICSEARCH_PASSWORD")
ENABLE_ELASTICSEARCH = os.getenv("ENABLE_ELASTICSEARCH", "false").lower() == "true"

# RAG ч│╗ч╡▒щБ╕цУЗ
RAG_SYSTEM_TYPE = os.getenv("RAG_SYSTEM_TYPE", "enhanced").lower()  # enhanced, graph, elasticsearch

# цЗЙчФичиЛх╝Пцибх╝П
APP_MODE = os.getenv("APP_MODE", "full").lower() # full, quick, ultra_fast
